pipeline {
    agent any
    tools { 
        maven 'maven' 
    }
    stages {
    	stage('PRE BUILD') {
    		parallel {
    			stage('UNIT TESTS') {
            		steps{
                		sh 'mvn -f maths/pom.xml clean verify test -Dsuitename=unit_tests.xml'
            		}
            		post {
        				always {
            				junit 'maths/target/surefire-reports/junitreports/*.xml'
            				step( [ $class: 'JacocoPublisher' ] ) 
        				}
    				}
        		}
        		
    			stage("SONAR CODE CHECK"){
        			steps{
						withSonarQubeEnv('MySonarQube') {
                			sh '/home/dinesh/ci_cd/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner -Dproject.settings=maths/sonar-scanner.properties'
            			}
            			
            			timeout(time: 2, unit: 'MINUTES') {
	                		// Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
	                		// true = set pipeline to UNSTABLE, false = don't
	                		waitForQualityGate abortPipeline: true
            			}
        			}
    			}
    		}
    	}
    	stage('PROVISION') {
    		parallel {
    			stage('DATABASE') {
    				steps {
    					sleep 1
    					sh 'echo USED TO PROVISION DATABASE'
    				}
    			}
    			stage('SERVICE V. (WIREMOCK)') {
    				steps {
    					sh 'echo USED TO PROVISION VIRTUALIZED END POINTS'
    				}
    			}
    			stage('PERF. (JMETER') {
    				steps {
    					sh 'echo USED TO PROVISION JMeter Service'
    				}
    			}
    		}
    		
    	}
		stage('PREVIEW ENV.') {
    		steps {
    			sleep 1
    			sh 'echo Application is deployed here in Preview environment'
    		}
    	}
    	stage('TEST') {
    		parallel {
    			stage('SMOKE TEST') {
    				steps {
    					sh 'mvn -f maths/ReleaseTests/pom.xml verify test -Dsuitename=smoke_tests.xml'
    				}
    				post {
    			    	always {
    			    		junit 'maths/ReleaseTests/target/surefire-reports/junitreports/*.xml'
    			        	step([$class: 'Publisher', reportFilenamePattern: 'maths/ReleaseTests/target/surefire-reports/testng-results.xml'])
    			    	}
    				}
    			}

    			stage('API TESTS') {
    				steps {
    					sleep 1
    					sh 'echo UI TESTS'
    				}
    			}
    			stage('SHIFT LEFT PERF. TESTS') {
    				steps {
    					sleep 1
    					sh 'echo SHIFT LEFT PERF. TESTS'
    				}
    			}
    		}
    	}
    	
    	stage('CLEAN-UP') {
    		steps {
    			sleep 1
    			sh 'echo CLEAN UP THE PROVISIONED RESOURCES'
    		}
    	}
    	
    	stage('DEPLOY-TEST-ENV') {
    		steps {
    			sleep 1
    			sh 'echo DEPLOY ON THE TEST ENVIRONMENT'
    		}
    	}
    	
    	stage('TEST-TEST-ENV') {
    		steps {
    			sleep 1
    			sh 'echo TEST IN TEST ENVIRONMENT'
    		}
    	}
    	
    	stage('DEPLOY - TRIAL/PRE-PROD') {
    		steps {
    			sleep 1
    			sh 'echo DEPLOY IN TRIAL/PREPROD ENVIRONMENT'
    		}
    	}
    	
    	stage('TEST - TRIAL/PRE-PROD') {
    		parallel {
    			stage('INTEGRATION TESTS') {
    				steps {
    					sleep 1
    					sh 'echo INETGRATION TESTS'
    				}
    			}
    			
    			stage('PERFORMANCE TESTS') {
    				steps {
    					sleep 1
    					sh 'echo PERFORMANCE TESTS'
    				}
    			}
    		}
    	}
    	//stage('FUNCTIONAL TEST REPORTS') {
    	//	steps {
    	//		script {
    	//			allure([
    	//				includeProperties: false,
   		//				jdk: '',
   		//				properties: [],
   		//				reportBuildPolicy: 'ALWAYS',
   		//				results: [[path: 'maths/target/allure-results']]
    	//			])
    	//		}
    	//	}
    	//}
    }
}
