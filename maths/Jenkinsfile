pipeline {
    agent any
    tools { 
        maven 'maven' 
    }
    
    parameters {
        string(name: "CODE_COVERAGE_QG", defaultValue: '0.5', description: 'Code coverage quality gate')
    }

    
    stages {
    	stage('Pre-Build') {
    		parallel {
    			stage('Unit Tests') {
            		steps{
                		sh "mvn -f maths/pom.xml clean verify test -Dsuitename=unit_tests.xml -Dcoverage_quality_gate=${params.CODE_COVERAGE_QG}"
            		}
            		post {
        				always {
            				// junit 'maths/target/surefire-reports/junitreports/*.xml'
            				step( [ $class: 'JacocoPublisher' ] ) 
        				}
    				}
        		}
        		
    		}
    	}
    	stage('Test') {
    		parallel {
    			stage('Smoke') {
    				steps {
    					sh 'mvn -f maths/ReleaseTests/pom.xml test -Dsuitename=smoke_tests.xml -Dtestng.report.xml.name=smoke-test-results.xml'
    				}
    			}

    			stage('Acceptance') {
    				steps {
    					sh 'mvn -f maths/ReleaseTests/pom.xml test -Dsuitename=acceptance_tests.xml -Dtestng.report.xml.name=acceptance-test-results.xml'
    				}
    			}
    		}
    	}
    	
    

        stage ('Upload Artifact') {
            steps {
                rtUpload (
                    // Obtain an Artifactory server instance, defined in Jenkins --> Manage Jenkins --> Configure System:
                    serverId: artifactory, 
                    spec: """{
                            "files": [
                                    {
                                        "pattern": "target/maths-1.3.jar",
                                        "target": "libs-snapshot-local"
                                    }
                                ]
                            }"""
                )
            }
        }
    }
}
