pipeline {
    agent any
    stages {
    	stage('PRE BUILD') {
    		parallel {
    			stage('UNIT TESTS') {
					agent {
                		docker { image 'maven:3-alpine' }
            		}
            		steps{
                		sh 'mvn -f maths/pom.xml clean test'
            		}
        		}
        		
    			stage("SONAR CODE CHECK"){
        			steps{
						withSonarQubeEnv('MySonarQube') {
                			sh '/home/dinesh/ci_cd/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner -Dproject.settings=maths/sonar-scanner.properties'
            			}
            			
            			timeout(time: 2, unit: 'MINUTES') {
	                		// Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
	                		// true = set pipeline to UNSTABLE, false = don't
	                		waitForQualityGate abortPipeline: true
            			}
        			}
    			}
    		}
    	}
    	stage('PROVISION') {
    		steps {
    			sh 'echo USED TO PROVISION DB, VIRTUALZED END POINTS AND OTHER RESOURCES'
    		}
    	}
    }
}
